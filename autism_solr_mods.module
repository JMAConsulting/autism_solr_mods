<?php

require_once 'autism_solr_mods.constants.php';

/**
 * Alter Solr documents before they are sent to Solr for indexing.
 *
 * @param array $documents
 *   An array of SearchApiSolrDocument objects ready to be indexed, generated
 *   from $items array.
 * @param SearchApiIndex $index
 *   The search index for which items are being indexed.
 * @param array $items
 *   An array of items being indexed.
 */
function autism_solr_mods_search_api_solr_documents_alter(&$documents, \Drupal\search_api\IndexInterface $index, array $items) {
  // Adds a "foo" field with value "bar" to all documents.
  foreach ($documents as $id => $document) {
    if ($document->ss_search_api_datasource == 'entity:civicrm_event') {
      $parts = explode('/', $document->ss_search_api_id);
      $id = substr($parts[1], 0, strpos($parts[1], ':'));
      $document->setField('tm_en_chapters', getEventChapters($id));
      $document->setField('tm_custom_' . CONTACT_CHAPTER_FIELD, getEventChapters($id));
      $document->setField('tm_fr_chapters', getEventChapters($id, 'fr'));
      $document->setField(DRUPAL_CHAPTER_FIELD, getNodeEventChapters($id));
      $document->setField('ss_type', 'Event');
      if (isset($document->locs_field_geolocation)) {
        $document->setField('bs_field_mapped_location', 'true');
      }
    }
    if ($document->ss_search_api_datasource == 'entity:civicrm_contact') {
      if(isset($document->ss_contact_type) && $document->ss_contact_type != "Provider") {
      }
      if (isset($document->ss_contact_sub_type) && $document->ss_contact_sub_type == "service_provider") {
        if (!empty($document->bs_field_mapped_location_1)) {
          $document->setField('bs_field_mapped_location', TRUE);
        }
        $solrField = 'tm_custom_' . SERVICE_LISTING_FIELD;
        $document->setField('ss_type', 'Service Listing');
        if (isset($document->{$solrField})) {
          $values = $document->{$solrField};
          $frValues = $enValues = [];
          $field = SERVICE_LISTING_FIELD;
          if (is_array($values)) {
            foreach ($values as $key => $value) {
              $values[$key] = getOptionLabel($field, $value);
              $enValues[$key] = getOptionLabel($field, $value);
              $frValues[$key] = getOptionLabel($field, $value, 'fr');
            }
          }
          else {
            $originalValue = $values;
            $values = getOptionLabel($field, $originalValue);
            $enValues = getOptionLabel($field, $originalValue);
            $frValues = getOptionLabel($field, $originalValue, 'fr');
          }
          $document->setField('tm_en_custom_' . $field, $enValues);
          $document->setField('sort_en_custom_' . $field, $enValues);
          $document->setField('tm_fr_custom_' . $field, $frValues);
          $document->setField('sort_fr_custom_' . $field, $frValues);
          $document->setField('ism_custom_' . $field, $values);
          $document->setField('sort_custom_' . $field, $values);
        }
        $solrField = 'tm_custom_' . SERVICES_PROVIDED_FIELD;
        if (isset($document->{$solrField})) {
          $values = $document->{$solrField};
          $field = SERVICES_PROVIDED_FIELD;
          $frValues = $enValues = [];
          if (is_array($values)) {
            foreach ($values as $key => $value) {
              $values[$key] = getOptionLabel($field, $value);
              $enValues[$key] = getOptionLabel($field, $value);
              $frValues[$key] = getOptionLabel($field, $value, 'fr');
            }
          }
          else {
            $originalValue = $values;
            $values = getOptionLabel($field, $originalValue);
            $enValues = getOptionLabel($field, $originalValue);
            $frValues = getOptionLabel($field, $originalValue, 'fr');
          }
          $document->setField('tm_fr_custom_' . $field, $frValues);
          $document->setField('tm_custom_' . $field, $values);
        }
        $solrField = 'tm_custom_' . CONTACT_CHAPTER_FIELD;
        if (isset($document->{$solrField})) {
          $values = $document->{$solrField};
          $chapterIds = [];
          if (is_array($document->{$solrField})) {
            foreach ($document->{$solrField} as $chapter) {
              $chapterIds[] = getChapterId($chapter);
            }
          }
          else {
            $chapterIds[] = getChapterId($document->{$solrField});
          }
          $document->setField(DRUPAL_CHAPTER_FIELD, $chapterIds);
        }
        $parts = explode('/', $document->ss_search_api_id);
        $id = substr($parts[1], 0, strpos($parts[1], ':'));
        $primaryAddress = civicrm_api('Address', 'get', ['contact_id' => $id, 'is_primary' => 1]);
        if (!empty($primaryAddress['values']) && !empty($primaryAddress['values'][$primaryAddress['id']]['geo_code_1'])) {
          $document->setField('bs_field_mapped_location', 'true');
        }
      }
      else {
        $document->setField('ss_type', 'Contact');
      }
    }
  }
}


/**
 * Implements hook_entity_type_alter().
 */
function autism_solr_mods_entity_type_alter(array &$entity_types) {
 // $entity_types['civicrm_contact']->setHandlerClass('access', CustomAccessHandler::class);
}

function getOptionLabel($customFieldID, $optionValue, $language = 'en') {
  \Drupal::service('civicrm')->initialize();
  $customFieldDetails = civicrm_api3('CustomField', 'getsingle', ['id' => $customFieldID]);
  $params = [
    'option_group_id' => $customFieldDetails['option_group_id'],
    'value' => $optionValue,
  ];

  if ($language == 'fr') {
    $params['options'] = ['language' => 'fr_CA'];
  }
  else {
    $params['options'] = ['language' => 'en_US'];
  }
  $optionValue = civicrm_api3('OptionValue', 'getsingle', $params);
  return $optionValue['label'];
}

function getEventChapters($eventId, $language = 'en') {
  \Drupal::service('civicrm')->initialize();
  $params = [
    'id' => $eventId,
    'return' => ['custom_' . EVENT_CHAPTER_FIELD],
  ];
  if ($language == 'fr') {
    $params['options'] = ['language' => 'fr_CA'];
  }
  $event = civicrm_api3('Event', 'getsingle', $params);
  return $event['custom_' . EVENT_CHAPTER_FIELD];
}

function getNodeEventChapters($eventId) {
  $chapterIds = [];
  $chapters = getEventChapters($eventId);
  if (is_array($chapters)) {
    foreach ($chapters as $chapter) {
      $chapterIds[] = getChapterId($chapter);
    }
  }
  else {
    $chapterIds[] = getChapterId($chapters);
  }
  return $chapterIds;
}

function getChapterId($chapter) {
  $db_query = \Drupal::database()->select('taxonomy_term__field_civicrm_chapter_value', 'tn');
  $entity_id_field = $db_query->addField('tn', 'entity_id');
  $db_query->condition('tn.field_civicrm_chapter_value_value', $chapter);
  $result = $db_query->execute()->fetchAll();
  if (!empty($result)) {
    return $result[0]->{$entity_id_field};
  }
}
